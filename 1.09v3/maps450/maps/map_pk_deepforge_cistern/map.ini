;/////////////////////////////////////////////////////////////////////////////
;///			Map Dwarvenfloor 5Pl by Powerkartoffel     	   ///
;///				                            		     	           ///
;///////////////////////////////////////////////////////////////////////////// 

;-----------------------------------------------------------------


Weather
	HardwareFogColor = R:50 G:80 B:90
	HardwareFogEnable = Yes
	HardwareFogStart = 700
	HardwareFogEnd = 4000
;	CloudTextureSize = X:100 Y:100		; size in world units that one repetition of the cloud texture spans
    CloudOffsetPerSecond = X:-0.005 Y:0.009	    ; offset in texture units that the cloud texture moves per second
End

AIData
	UseLowLODTrees = No ;;.;;
END

WaterTransparency
	ReflectionPlaneZ = 89.0;
	ReflectionOn = No
End

;-------------------------------------------------------------------------------------------------------


; Moria Modules

ChildObject MoriaModuleMineStraightB  MoriaModuleMineStraightB 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject RivendellCliff02  RivendellCliff02
	KindOf  =   IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	
  Geometry              = BOX
  GeometryMajorRadius   = 1
  GeometryMinorRadius   = 1
  GeometryHeight        = 1
  GeometryIsSmall       = Yes
  GeometryOffset      = X:0 Y:0 Z:0 
End

ChildObject RivendellCliff02  RivendellCliff02
	
  Geometry              = BOX
  GeometryMajorRadius   = 1
  GeometryMinorRadius   = 1
  GeometryHeight        = 1
  GeometryIsSmall       = Yes
  GeometryOffset      = X:0 Y:0 Z:0 
End

ChildObject HighPass_FallingIceTower  HighPass_FallingIceTower
	KindOf  =   IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	
  Geometry              = BOX
  GeometryMajorRadius   = 1
  GeometryMinorRadius   = 1
  GeometryHeight        = 1
  GeometryIsSmall       = Yes
  GeometryOffset      = X:0 Y:0 Z:0 
End

ChildObject MoriaModuleDwarvenCornerA  MoriaModuleDwarvenCornerA 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenCorridorStairsC  MoriaModuleDwarvenCorridorStairsC 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenCorridorStraightA  MoriaModuleDwarvenCorridorStraightA 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenCorridorStraightB  MoriaModuleDwarvenCorridorStraightB
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenCorridorStraightC  MoriaModuleDwarvenCorridorStraightC 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenEntranceA  MoriaModuleDwarvenEntranceA 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenGreatHallCenter  MoriaModuleDwarvenGreatHallCenter 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenGreatHallWall  MoriaModuleDwarvenGreatHallWall 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenGreatHallColumnA  MoriaModuleDwarvenGreatHallColumnA 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenGreatHallColumnB  MoriaModuleDwarvenGreatHallColumnB 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenGreatHallColumnC  MoriaModuleDwarvenGreatHallColumnC
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenGreatHallDoorA  MoriaModuleDwarvenGreatHallDoorA 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenGreatHallDoorATop  MoriaModuleDwarvenGreatHallDoorATop
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenRoom3WayA  MoriaModuleDwarvenRoom3WayA
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE; ;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenRoom3WayB  MoriaModuleDwarvenRoom3WayB
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleMine3WayA  MoriaModuleMine3WayA
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject MoriaModuleDwarvenCorridor3WayA  MoriaModuleDwarvenCorridor3WayA
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

;  Erebor Walls

ChildObject EreborCorner01  EreborCorner01
	KindOf  =  IMMOBILE IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborCorner02  EreborCorner02
	KindOf  =  IMMOBILE IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject Ereborcorner03  Ereborcorner03
	KindOf  =  IMMOBILE IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborDestructableDoor  EreborDestructableDoor
	KindOf  =  IMMOBILE IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborNiche01  EreborNiche01
	KindOf  =  IMMOBILE IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborWall01  EreborWall01 
	KindOf  =  IMMOBILE IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborWall02  EreborWall02
	KindOf  =  IMMOBILE IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

; EREBOR EDGE // Arch, Step

ChildObject EreborArch01  EreborArch01
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborStep  EreborStep
	KindOf  =  IMMOBILE IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborEdge  EreborEdge
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE

  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:step
  EditorSorting   = STRUCTURE

  ; *** ENGINEERING Parameters ***  
  KindOf          = IMMOBILE UNATTACKABLE NOT_AUTOACQUIRABLE
  Shadow          = SHADOW_VOLUME
  Body            = ActiveBody ModuleTag_03
    MaxHealth       = 99999.0
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 1
  GeometryMinorRadius = 1
  GeometryHeight = 1
  GeometryIsSmall = Yes
End

ChildObject EreborEdgeCorner  EreborEdgeCorner
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE

  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:step
  EditorSorting   = STRUCTURE

  ; *** ENGINEERING Parameters ***  
  KindOf          = IMMOBILE UNATTACKABLE NOT_AUTOACQUIRABLE
  Shadow          = SHADOW_VOLUME
  Body            = ActiveBody ModuleTag_03
    MaxHealth       = 99999.0
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 1
  GeometryMinorRadius = 1
  GeometryHeight = 1
  GeometryIsSmall = Yes
End

ChildObject EreborEdgeNiche  EreborEdgeNiche
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE

  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:step
  EditorSorting   = STRUCTURE

  ; *** ENGINEERING Parameters ***  
  KindOf          = IMMOBILE UNATTACKABLE NOT_AUTOACQUIRABLE
  Shadow          = SHADOW_VOLUME
  Body            = ActiveBody ModuleTag_03
    MaxHealth       = 99999.0
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 1
  GeometryMinorRadius = 1
  GeometryHeight = 1
  GeometryIsSmall = Yes
End


; Erebor Track Column

ChildObject EreborPropTrack  EreborPropTrack
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End


ChildObject EreborColumn01  EreborColumn01 
	KindOf  =  IMMOBILE IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborTrackMiddle  EreborTrackMiddle 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborTrack  EreborTrack 
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

ChildObject EreborTrackTurn  EreborTrackTurn
	KindOf  =  IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE;;
	RadarPriority = NOT_ON_RADAR
	Shadow        = NONE
End

; Erebor Props

ChildObject EreborWheel2  EreborWheel2

 Draw = W3DScriptedModelDraw ModuleTag_01
    DefaultModelConditionState
      Model = EB_wheel2_SKN
    End
		IdleAnimationState
			Animation = IDLE
				AnimationName		=	EB_wheel2_SKL.EB_wheel2_IDLA
				AnimationMode 		=	LOOP	
			End 

			;BeginScript
			;	Prev = CurDrawablePrevAnimationState()
			;	if Prev == "BeingConstructed" then 
				    ; Don't play completed sound when canceling build-in-progress or when
				    ; destroyed halfway
			;	    if not CurDrawableModelcondition( "DYING" ) then 
			;			CurDrawablePlaySound("CampSoldierCompleteGeneric")
			;		end
			;	end
			;EndScript
		End
  End
	KindOf  =   IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE MOVE_ONLY;
	RadarPriority = NOT_ON_RADAR
	
	
End

ChildObject EreborChart03  EreborChart03
	KindOf  =   IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE MOVE_ONLY;
	RadarPriority = NOT_ON_RADAR
End

ChildObject EBMineCartD  EBMineCartD
	KindOf  =   IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE MOVE_ONLY;
	RadarPriority = NOT_ON_RADAR
End

ChildObject EBMineCartA  EBMineCartA
	KindOf  =   IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE MOVE_ONLY;
	RadarPriority = NOT_ON_RADAR
End

ChildObject EBMineCartB  EBMineCartB
	KindOf  =   IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE MOVE_ONLY;
	RadarPriority = NOT_ON_RADAR
End

ChildObject EBMineCartC  EBMineCartC
	KindOf  =   IMMOBILE INERT IGNORED_IN_GUI UNATTACKABLE MOVE_ONLY;
	RadarPriority = NOT_ON_RADAR
End


;////////////  Trees  ////////////////



ChildObject TreeDead01  TreeDead01

  Draw                  = W3DTreeDraw ModuleTag_Opt_01
    ModelName = PREdoras11
    TextureName = predorasrocks.tga
    DoTopple         = Yes
    ToppleFX         = FX_ToppleTree
    BounceFX         = FX_TreeBounce
    KillWhenFinishedToppling = No
    SinkDistance     = 9;
    SinkTime         = DEFAULT_TREE_SINK_TIME
    TaintedTree	     = Yes
  End
  Draw                  = W3DScriptedModelDraw ModuleTag_01
    DefaultModelConditionState
      Model             = PREdoras11
    End
      
    ModelConditionState = PASSENGER CLUB
      Model = None
    End
    AnimationState = PASSENGER CLUB
      EnteringStateFX = FX_DeadTreeBecomeClub
    End

    ModelConditionState = PASSENGER
      Model             = PREdoras11
    End
    AnimationState = PASSENGER
      EnteringStateFX = FX_DeadTreePickUp
    End
    
    
    ; These are the model conditions and animation states required for trees that can burn.  
    ModelConditionState = BURNED
      Model = PREdoras11 ; use default nondeath model in place of this.
    End

    AnimationState   = AFLAME ;Currently on fire
	  ParticleSysBone     = None FireTreeSmall 
	  ParticleSysBone     = None TreeEmbers 
    End

    AnimationState   = DYING BURNED ;Currently on fire
	  ParticleSysBone     = None FireTreeSmall 
	  ParticleSysBone     = None TreeEmbers 
    End
    ; End of stuff required for burn. 
    
  End

  Geometry            = CYLINDER
  GeometryIsSmall     = Yes
  GeometryMajorRadius = 3.2
  GeometryHeight      = 60
  
End

ChildObject TreeDead02  TreeDead02

  Draw                  = W3DTreeDraw ModuleTag_Opt_01
    ModelName = PREdoras12
    TextureName = predorasrocks.tga
    DoTopple         = Yes
    ToppleFX         = FX_ToppleTree
    BounceFX         = FX_TreeBounce
    KillWhenFinishedToppling = No
    SinkDistance     = 9;
    SinkTime         = DEFAULT_TREE_SINK_TIME
    TaintedTree	     = Yes
  End
  Draw                  = W3DScriptedModelDraw ModuleTag_01
    DefaultModelConditionState
      Model             = PREdoras12
    End
      
    ModelConditionState = PASSENGER CLUB
      Model = None
    End
    AnimationState = PASSENGER CLUB
      EnteringStateFX = FX_DeadTreeBecomeClub
    End

    ModelConditionState = PASSENGER
      Model             = PREdoras12
    End
    AnimationState = PASSENGER
      EnteringStateFX = FX_DeadTreePickUp
    End
    
    
    ; These are the model conditions and animation states required for trees that can burn.  
    ModelConditionState = BURNED
      Model = PREdoras12 ; use default nondeath model in place of this.
    End

    AnimationState   = AFLAME ;Currently on fire
	  ParticleSysBone     = None FireTreeSmall 
	  ParticleSysBone     = None TreeEmbers 
    End

    AnimationState   = DYING BURNED ;Currently on fire
	  ParticleSysBone     = None FireTreeSmall 
	  ParticleSysBone     = None TreeEmbers 
    End
    ; End of stuff required for burn. 
    
  End

  Geometry            = CYLINDER
  GeometryIsSmall     = Yes
  GeometryMajorRadius = 3.2
  GeometryHeight      = 60
  
End

ChildObject TreeDead05  TreeDead05

  Draw                  = W3DTreeDraw ModuleTag_Opt_01
    ModelName = PRDarkGrey11
    TextureName = tclif_roh01.tga
    DoTopple         = Yes
    ToppleFX         = FX_ToppleTree
    BounceFX         = FX_TreeBounce
    KillWhenFinishedToppling = No
    SinkDistance     = 9;
    SinkTime         = DEFAULT_TREE_SINK_TIME
    TaintedTree	     = Yes
  End
  Draw                  = W3DScriptedModelDraw ModuleTag_01
    DefaultModelConditionState
      Model             = PRDarkGrey11
    End
      
    ModelConditionState = PASSENGER CLUB
      Model = None
    End
    AnimationState = PASSENGER CLUB
      EnteringStateFX = FX_DeadTreeBecomeClub
    End

    ModelConditionState = PASSENGER
      Model             = PRDarkGrey11
    End
    AnimationState = PASSENGER
      EnteringStateFX = FX_DeadTreePickUp
    End
    
    
    ; These are the model conditions and animation states required for trees that can burn.  
    ModelConditionState = BURNED
      Model = PRDarkGrey11 ; use default nondeath model in place of this.
    End

    AnimationState   = AFLAME ;Currently on fire
	  ParticleSysBone     = None FireTreeSmall 
	  ParticleSysBone     = None TreeEmbers 
    End

    AnimationState   = DYING BURNED ;Currently on fire
	  ParticleSysBone     = None FireTreeSmall 
	  ParticleSysBone     = None TreeEmbers 
    End
    ; End of stuff required for burn. 
    
  End

  Geometry            = CYLINDER
  GeometryIsSmall     = Yes
  GeometryMajorRadius = 3.2
  GeometryHeight      = 60
  
End

ChildObject TreeDead07  TreeDead07

  Draw                  = W3DTreeDraw ModuleTag_Opt_01
    ModelName = PREdoras12
    TextureName = tclif_roh01.tga
    DoTopple         = Yes
    ToppleFX         = FX_ToppleTree
    BounceFX         = FX_TreeBounce
    KillWhenFinishedToppling = No
    SinkDistance     = 9;
    SinkTime         = DEFAULT_TREE_SINK_TIME
    TaintedTree	     = Yes
  End
  Draw                  = W3DScriptedModelDraw ModuleTag_01
    DefaultModelConditionState
      Model             = PREdoras12
    End
      
    ModelConditionState = PASSENGER CLUB
      Model = None
    End
    AnimationState = PASSENGER CLUB
      EnteringStateFX = FX_DeadTreeBecomeClub
    End

    ModelConditionState = PASSENGER
      Model             = PREdoras12
    End
    AnimationState = PASSENGER
      EnteringStateFX = FX_DeadTreePickUp
    End
    
    
    ; These are the model conditions and animation states required for trees that can burn.  
    ModelConditionState = BURNED
      Model = PREdoras12 ; use default nondeath model in place of this.
    End

    AnimationState   = AFLAME ;Currently on fire
	  ParticleSysBone     = None FireTreeSmall 
	  ParticleSysBone     = None TreeEmbers 
    End

    AnimationState   = DYING BURNED ;Currently on fire
	  ParticleSysBone     = None FireTreeSmall 
	  ParticleSysBone     = None TreeEmbers 
    End
    ; End of stuff required for burn. 
    
  End

  Geometry            = CYLINDER
  GeometryIsSmall     = Yes
  GeometryMajorRadius = 3.2
  GeometryHeight      = 60
  
End

ChildObject SignalFire SignalFire

 Draw = W3DScriptedModelDraw ModuleTag_01
		OkToChangeModelColor  = Yes
		UseStandardModelNames = Yes
		StaticModelLODMode = yes ; Will append M or L to the skin name depending on GameLOD  
		DefaultModelConditionState
			Model = NBSigFire
		End
		
	AnimationState = PHANTOM_STRUCTURE
		BeginScript
   			CurDrawableHideSubObject("MOUNTIAN")
   			CurDrawableHideSubObject("STAIRS")
   			CurDrawableHideSubObject("COLUMN")
		EndScript
	End
 End
   
 	Behavior = GrantUpgradeCreate ModuleTag_ActLikeAnOldUpgrade
		UpgradeToGrant 				= Upgrade_StructureLevel1
		GiveOnBuildComplete			= Yes
	End
	
    Behavior = SubObjectsUpgrade ModuleTag_HideAll
		TriggeredBy		= Upgrade_StructureLevel1
		HideSubObjects	= COLUMN MOUNTIAN STAIRS
	End
	
	Draw = W3DFloorDraw ModuleTag_DrawFloor    
	;	StaticModelLODMode = Yes		; THIS NEEDS TO BE COMMENTED OUT WHEN ENGINEERING ENABLES LOD'S IN THE FLOOR DRAW

   ;  WeatherTexture		= SNOWY EBBarracks_Bib_snow.tga
	End

End




; old 1.06 Gollum

ChildObject NeutralGollum NeutralGollum

Body = ActiveBody ModuleTag_02
        MaxHealth         =  200 ;; GOLLUM_HEALTH
    End
    LocomotorSet
        Locomotor     = HumanLocomotor
        Condition     = SET_NORMAL
        Speed         = 45
    End

    LocomotorSet
        Locomotor     = HumanWanderLocomotor
        Condition     = SET_WANDER
        Speed         =  32
    End

End